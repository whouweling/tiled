// Generated by CoffeeScript 1.10.0
(function() {
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  window.GatherTask = (function(superClass) {
    extend(GatherTask, superClass);

    function GatherTask() {
      return GatherTask.__super__.constructor.apply(this, arguments);
    }

    GatherTask.prototype.is_executable = function() {
      var item;
      item = this.world.items[this.x][this.y];
      if (!item) {
        return false;
      }
      if (!item.has_product()) {
        return false;
      }
      return true;
    };

    GatherTask.prototype.execute = function() {
      var product;
      if (!this.is_executable()) {
        return;
      }
      if (this.assigned.carry) {
        return new window.DropTask(this.world, this.x, this.y);
      }
      if (this.assigned.x !== this.x || this.assigned.y !== this.y) {
        this.assigned.goto(this);
        return true;
      }
      if (this.do_work()) {
        return true;
      }
      console.log(this.world.items[this.x][this.y]);
      product = this.world.items[this.x][this.y].get_product();
      this.assigned.carry = new product(this.world, this.x, this.y);
      return new window.DropTask(this.world, this.x, this.y);
    };

    return GatherTask;

  })(window.Task);

}).call(this);

//# sourceMappingURL=gather.js.map
