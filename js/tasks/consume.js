// Generated by CoffeeScript 1.9.2
(function() {
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  window.ConsumeTask = (function(superClass) {
    extend(ConsumeTask, superClass);

    function ConsumeTask() {
      return ConsumeTask.__super__.constructor.apply(this, arguments);
    }

    ConsumeTask.prototype.is_executable = function() {
      return true;
    };

    ConsumeTask.prototype.execute = function() {
      var food, item;
      if (this.assigned.carry && (this.assigned.carry instanceof window.Food)) {
        if (this.do_work()) {
          return true;
        }
        this.assigned.hunger = 0;
        this.assigned.carry = 0;
        return false;
      }
      item = this.world.item_at(this.assigned);
      if (item instanceof window.Food) {
        console.log("Picking up", item);
        this.assigned.carry = item;
        this.world.remove_item(item);
        return true;
      }
      food = this.world.find_item(this.x, this.y, window.Food, false);
      if (!food) {
        console.log("No food found");
        return false;
      }
      console.log("Going to food", food.x, food.y);
      this.assigned.goto(food);
      return true;
    };

    return ConsumeTask;

  })(window.Task);

}).call(this);

//# sourceMappingURL=consume.js.map
